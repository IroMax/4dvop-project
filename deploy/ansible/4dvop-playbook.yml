---

# ----------------------------------------------------------
#                ALL VM
# ----------------------------------------------------------
- name: Install docker
  hosts: all:!jdac
  become: true
  tags:
    - run-app-

  pre_tasks:
    - name: Install epel-release
      yum:
        name: epel-release
        state: latest

    - name: install the 'Development tools' package group
      yum:
        name: "@Development tools"
        state: present

    - name: Python-devel
      yum:
        name: python-devel
        state: present

    - name: Install python pip
      yum:
        name: python-pip
        state: latest

    - name: Install docker
      pip:
        name: docker

  tasks:
    - include_role:
        name: docker-setup-role

# ----------------------------------------------------------
#                REGISTRY VM
# ----------------------------------------------------------
- name: Deploy registry, private docker registry
  hosts: registry
  become: true
  tags:
    - deploy-registry

  tasks:
    - name: Deploy private registry task
      docker_container:
        name: registry-ctn
        image: registry
        state: started
        ports:
          - "8000:5000"

    - name: Deploy docker registry frontend task
      docker_container:
        name: registry-frontend-ctn
        state: started
        image: konradkleine/docker-registry-frontend:v2
        ports:
          - "8080:80"
        env:
          ENV_DOCKER_REGISTRY_HOST: registry-ctn
          ENV_DOCKER_REGISTRY_PORT: "5000"
          FRONTEND_BROWSE_ONLY_MODE: "false"

    - name: Create a registry-network network and connect containers
      docker_network:
        name: registry-network
        connected:
          - registry-ctn
          - registry-frontend-ctn

# -------------------------------------------------------------
#                LOCAL build AND PUSH TO REGISTRY images VM
# -------------------------------------------------------------

- name:  Install requirements, Build api and studentlist
  hosts: jdac
  become: true
  tags:
    - build-simple-api-and-website

  pre_tasks:
    - name: install Docker compose task in local
      pip:
        name: docker
        state: present

    - name: Docker-compose installation task in local
      pip:
        name: docker-compose
        state: present

  tasks:
    - name: Build docker compose yaml file task
      docker_compose:
        project_src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop-project_complete-playbook/appli/simple_api/simple_api
        build: yes
      register: output

# ----------------------------------------------------------
#      TEST simple api and stop container - VM DEPLOY
# ----------------------------------------------------------
- name:  curl check
  hosts: deploy
  tags:
    - test-simple-api-stop
  tasks:
    - name: Run check api
      shell:
        cmd: curl -u toto:python -X GET http://localhost:5001/pozos/api/v1.0/get_student_ages

# -----------------------------------------------------------------
#                STOP API AND STUDENTLIST containers in JDAC VM
# -----------------------------------------------------------------

- name:  Stop Running containers (api and studentlist)
  hosts: jdac
  become: true
  tags:
    - test-simple-api-stop

  tasks:
    - name: Stop api and studentlist containers task
      docker_compose:
        project_src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop-project_complete-playbook/appli/simple_api/simple_api
        state: absent

# ----------------------------------------------------------
#                CLAIR SCAN Build
# ----------------------------------------------------------
- name:  Clair Scan - Security testing
  hosts: jdac
  tags:
    - clair
  tasks:
    - name: Run clair task
      docker_compose:
        project_src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop-project_complete-playbook/deploy/clair
        build: yes
      register: output

    - name: Run clair job
      shell: |
            if clair-scanner --clair="http://clair:6060" --ip jdac simple-api:latest
            then
              exit 1
            else
              exit 0
            fi
