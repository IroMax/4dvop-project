---

# ----------------------------------------------------------
#     Install prerequisites on Registry and Repository
# ----------------------------------------------------------
- name: Install docker
  hosts: registry,repository
  become: true
  tags:
    - inst-prerequisites

  tasks:
    - name: Install epel-release
      yum:
        name: epel-release
        state: latest
      
    - name: Install python pip
      yum:
        name: python-pip
        state: latest
    
    - name: Install docker
      pip:
        name: docker
  
    - include_role: 
        name: geerlingguy.docker

# ----------------------------------------------------------
#      Install prerequisites on Application and Deploy
# ----------------------------------------------------------

- name: Install docker on app server
  hosts: app,deploy
  become: true
  tags:
    - inst-prerequisites

  tasks:
    - name: Install epel-release-app
      yum:
        name: epel-release
        state: latest
      
    - name: install the 'Development tools' package group
      yum:
        name: "@Development tools"
        state: present

    - name: Python-devel
      yum:
        name: python-devel
        state: present

    - name: Upgrade pip
      pip:
        name: pip
        executable: pip2
        extra_args: --upgrade

    - name: Install docker
      pip:
        name: docker
    
    - name: Install docker-compose
      pip:
        name: docker-compose

        
# ----------------------------------------------------------
#      Install git prerequisite on Repository, Deploy and Appli
# ---------------------------------------------------------- 

- name: Install GIT on Repository, Deploy and Appli
  hosts: repository, deploy, app
  become: true
  tags:
    - inst-prerequisites

  tasks:
    - name: Install git
      yum:
        name: git
        state: present
        update_cache: yes

# --------------------------------------------------------------
#     RUN REPOSITORY DATABSE
# --------------------------------------------------------------

- name: setup postgres
  hosts: repository
  become: true
  tags:
    - deploy-repository
  tasks:
    - include_role: 
        name: levonet.docker_postgres
      vars:
        docker_postgres__name: 4dvop-pg-ctn
        docker_postgres__image: postgres:11.1-alpine
        docker_postgres__port: 5678
        docker_postgres__superuser_name: superuser
        docker_postgres__superuser_password: supersecret
        docker_postgres__env:
          POSTGRES_DB: 4dvop-db
        docker_postgres__log_driver: syslog
        docker_postgres__log_options:
          syslog-facility: local0
          tag: "{{ docker_postgres__name }}"



# ----------------------------------------------------------
#     RUN REPOSITORY GOS
# ----------------------------------------------------------
- name: Deploy Gos, private github repository
  hosts: repository
  become: true
  tags:
    - deploy-repository
  tasks:
    - name: Deploy private repository task
      docker_container:
        name: gogs-ctn
        image: gogs/gogs
        state: started
        ports:
          - "4000:3000"
        networks:
        - name: app-network
        networks_cli_compatible: yes


# ----------------------------------------------------------
#    RUN REGISTRY VM
# ----------------------------------------------------------
- name: Deploy registry, private docker registry
  hosts: registry
  become: true
  tags:
    - deploy-registry  
  tasks:
    - name: Deploy private repository task
      docker_container:
        name: registry-ctn
        image: registry
        state: started
        ports:
          - "8000:5000"
          
- name: Deploy registry frontend
  hosts: registry
  become: true
  tags:
    - deploy-registry    
  tasks:
    - name: Deploy registry frontend task
      docker_container:
        name: registry-frontend
        state: started
        image: konradkleine/docker-registry-frontend:v2
        links: registry-ctn:registry-ctn
        ports:
          - "80:80"
        env:
          ENV_DOCKER_REGISTRY_HOST: registry-ctn
          ENV_DOCKER_REGISTRY_PORT: "5000"
          FRONTEND_BROWSE_ONLY_MODE: "false"

# ----------------------------------------------------------
#    GET Code From Repository on Deploy
# ----------------------------------------------------------
- name:  Get code
  hosts: deploy
  tags:
    - get-code
  tasks:
    - name: Get code from private repo
      git:
         repo: 'http://192.168.48.11:4000/Djodane/4dvop'
         dest: /app
         clone: yes

# ----------------------------------------------------------
#    GET Code From Repository on appli
# ----------------------------------------------------------
- name:  Get code
  hosts: app
  tags:
    - get-code
  tasks:
    - name: Get code from private repo
      git:
         repo: 'http://192.168.48.11:4000/Djodane/4dvop'
         dest: /app
         clone: yes

# ----------------------------------------------------------
#    BUILD images on Deploy and push to Registry
# ----------------------------------------------------------
- name:  Build and push api and studentlist app
  hosts: deploy
  tags:
    - build-simple-api
  tasks:
    - name: Build app and push it to a private repo
      docker_image:
        build:
          path: /app/appli/simple_api
        name: 192.168.48.12:8000/simple-api
        tag: latest
        push: yes
        source: build

# ----------------------------------------------------------
#      RUN app on Deploy for test api
# ----------------------------------------------------------

- name:  Run app
  hosts: deploy
  tags:
    - run-simple-api
  tasks:
    - name: Run app task
      docker_container:
        name: simple-api
        image: simple-api:latest
        ports:
          - "5001:5000"
        volumes:
          - /app/appli/simple_api:/usr/src/app
          - /app/appli/simple_api/student_age.json:/data/student_age.json

# ----------------------------------------------------------
#      TEST api from Deploy
# ---------------------------------------------------------- 
- name:  curl check
  hosts: deploy
  tags:
    - test-simple-api
  tasks:
    - name: Run check api
      shell:
        cmd: curl -u toto:python -X GET http://192.168.48.10:5001/pozos/api/v1.0/get_student_ages

# ----------------------------------------------------------
#      STOP api container from Deploy
# ---------------------------------------------------------- 

- name: Stop simple api container
  hosts: deploy
  tags:
    - test-simple-api
  tasks:
     - name: Stop api
       docker_container:
         name: simple-api
         state: stopped

# ----------------------------------------------------------
#     CLEAN Deploy docker image simple-api
# ----------------------------------------------------------

- name:  Clean images
  hosts: app
  tags:
    - test-simple-api
  tasks:
    - name: Clean images
      docker_image:
        name: 192.168.48.12:8000/simple-api
        state: absent

# ----------------------------------------------------------
#                COPY Clair Docker-compose
# ----------------------------------------------------------
- name: Copy Docker-compose
  hosts: deploy
  become: true
  tags:
    - clair
    
  tasks:
    - name: Copy clair docker-compose
      copy:
        src: /app/deploy/clair-docker-compose.yaml
        dest: /home/centos/docker-compose.yaml


# ----------------------------------------------------------
#                CLAIR SCAN Build
# ----------------------------------------------------------
- name:  Clair Scan
  hosts: deploy
  tags:
    - clair
  tasks:
    - name: Run clair task
      docker_compose:
        project_src: /home/centos
        build: yes
      register: output


# ----------------------------------------------------------
#                CLAIR SCAN Launch
# ----------------------------------------------------------
- name:  Clair launch
  hosts: jdac
  tags:
    - clair
  tasks:
    - name: Run clair job
      shell:
        cmd: clair-scanner --clair="http://clair:6060" --ip jdac simple-api:latest


###############
# ----------------------------------------------------------
#                APPLI - Clone repository
# ----------------------------------------------------------
- name: Clone Repository
  hosts: app
  become: true
  tags:
    - run-app
    
  tasks:
    - name: clone app
      copy:
        src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop_master/appli
        dest: /home/centos

    - name: clone daemon.json
      copy:
        src: /app/appli/daemon.json
        dest: /etc/docker/daemon.json

    - name: restart docker
      shell: service docker restart


# ----------------------------------------------------------
#                DEPLOY app on App
# ----------------------------------------------------------
- name:  Deploy api and studentlist app
  hosts: app
  tags:
    - run-app
  tasks:
#    - name: Build an image and push it to a private repo
#      docker_image:
#        build:
#          path: /app/appli/simple_api
#        name: 192.168.48.12:8000/simple-api
#        tag: v1
#        push: yes
#        source: build
    
    - name: Pull from registry
      docker_image:
        name: php:apache
        source: pull

# ----------------------------------------------------------
#                RUN 
# ----------------------------------------------------------
- name:  Run app
  hosts: app
  tags:
    - run-app
  tasks:
    - name: Run app task
      docker_compose:
        project_src: /app/appli
        build: yes
      register: output




######################################
