---

# ----------------------------------------------------------
#                ALL VM
# ----------------------------------------------------------
- name: Install docker
  hosts: all:!local
  become: true
  tags:
    - run-app-

  pre_tasks:
    - name: Install epel-release
      yum:
        name: epel-release
        state: latest

    - name: install the 'Development tools' package group
      yum:
        name: "@Development tools"
        state: present

    - name: Python-devel
      yum:
        name: python-devel
        state: present

    - name: Install python pip
      yum:
        name: python-pip
        state: latest

    - name: Install docker
      pip:
        name: docker

  tasks:
    - include_role:
        name: geerlingguy.docker

# ----------------------------------------------------------
#                REPOSITORY VM
# ----------------------------------------------------------
- name: Deploy Gos, private github repository
  hosts: repository
  become: true
  tags:
    - gos-repository

  pre_tasks:
    - name: Install git
      yum:
        name: git
        state: present
        update_cache: yes

  tasks:
    - include_role:
        name: levonet.docker_postgres
      vars:
        docker_postgres__name: 4dvop-pg-ctn
        docker_postgres__image: postgres:11.1-alpine
        docker_postgres__port: 5678
        docker_postgres__superuser_name: superuser
        docker_postgres__superuser_password: supersecret
        docker_postgres__env:
          POSTGRES_DB: 4dvop-db
        docker_postgres__log_driver: syslog
        docker_postgres__log_options:
          syslog-facility: local0
          tag: "{{ docker_postgres__name }}"

    - name: Deploy private repository (gogs) task
      docker_container:
        name: gogs-ctn
        image: gogs/gogs
        state: started
        ports:
          - "23:22"
          - "4000:3000"
        networks:
        - name: app-network
        networks_cli_compatible: yes


# ----------------------------------------------------------
#                REGISTRY VM
# ----------------------------------------------------------
- name: Deploy docker private registry
  hosts: registry
  become: true
  tags:
    - deploy-registry

  tasks:
    - name: Deploy private registry task
      docker_container:
        name: registry-ctn
        image: registry
        state: started
        ports:
          - "8000:5000"

    - name: Deploy docker registry frontend task
      docker_container:
        name: registry-frontend-ctn
        state: started
        image: konradkleine/docker-registry-frontend:v2
        ports:
          - "90:80"
        env:
          ENV_DOCKER_REGISTRY_HOST: registry-ctn
          ENV_DOCKER_REGISTRY_PORT: "5000"
          FRONTEND_BROWSE_ONLY_MODE: "false"

    - name: Create a registry-network network and connect containers
      docker_network:
        name: registry-network
        connected:
          - registry-ctn
          - registry-frontend-ctn


# --------------------------------------------------------------------------
# SETUP docker registry security settings for pushing images - DEPLOY VM
# --------------------------------------------------------------------------
- name:  Setup daemon registry security setting for pushing images
  hosts: deploy
  become: true
  tags:
    - registry-daemon

  tasks:
    - name: Copy daemon json file to  deploy vm task
      copy:
        src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop-project_complete-playbook/appli/daemon.json
        dest: /etc/docker/daemon.json

    - name: restart docker
      shell: service docker restart

# ----------------------------------------------------------
#                LOCAL build AND PUSH TO REGISTRY images VM
# ----------------------------------------------------------

- name:  Install requirements, Build api and studentlist and push to registry
  hosts: local
  become: true
  tags:
    - build-push-app

  pre_tasks:
    - name: install Docker compose task in local
      pip:
        name: docker
        state: present

    - name: Docker-compose installation task in local
      pip:
        name: docker-compose
        state: present

  tasks:
    - name: Build docker compose yaml file task
      docker_compose:
        project_src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop-project_complete-playbook/appli/simple_api/simple_api
        build: yes
      register: output

    - name: Push api to docker private registry task
      docker_image:
        name: 172.16.203.147:8000/simple-api
        tag: v1
        push: yes
        source: local

    - name: Tag php apache app image and push to registry task
      docker_image:
        name: php:apache
        repository: 172.16.203.147:8000/php:apache
        force_tag: yes
        push: yes
        source: local

# ----------------------------------------------------------
#                RUN APP
# ----------------------------------------------------------
- name:  Run app
  hosts: app
  become: true
  tags:
    - run-app

  tasks:
    - name: Run simple api from private registry task
      docker_container:
        name: api-ctn
        image: 172.16.203.147:8000/simple-api:v1
        ports:
          - "5001:5000"

    - name: Run php apache from private registry task
      docker_container:
        name: app-ctn
        image: 172.16.203.147:8000/php:apache
        ports:
          - "3000:80"

    - name: Create and connect api and app containers
      docker_network:
        name: app-network
        connected:
          - api-ctn
          - app-ctn
