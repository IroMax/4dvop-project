---

# ----------------------------------------------------------
#                ALL VM
# ----------------------------------------------------------
- name: Install docker
  hosts: all:!app,deploy
  become: true
  tags:
    - run-app-

  pre_tasks:
    - name: Install epel-release
      yum:
        name: epel-release
        state: latest
      
    - name: Install python pip
      yum:
        name: python-pip
        state: latest
    - name: Install docker
      pip:
        name: docker

  tasks:
    - include_role: 
        name: geerlingguy.docker

# ----------------------------------------------------------
#                APP REQUIREMENTS
# ----------------------------------------------------------

- name: Install docker on app server
  hosts: app,deploy
  become: true
  tags:
    - run-clair-

  pre_tasks:
    - name: Install epel-release-app
      yum:
        name: epel-release
        state: latest
      
    - name: install the 'Development tools' package group
      yum:
        name: "@Development tools"
        state: present

    - name: Python-devel
      yum:
        name: python-devel
        state: present

        

# --------------------------------------------------------------
#                REPOSITORY  VM - SETUP postgres for gogs image
# --------------------------------------------------------------

- name: setup postgres
  hosts: repository
  become: true

  tasks:
    - include_role: 
        name: levonet.docker_postgres
      vars:
        docker_postgres__name: 4dvop-pg-ctn
        docker_postgres__image: postgres:11.1-alpine
        docker_postgres__port: 5678
        docker_postgres__superuser_name: superuser
        docker_postgres__superuser_password: supersecret
        docker_postgres__env:
          POSTGRES_DB: 4dvop-db
        docker_postgres__log_driver: syslog
        docker_postgres__log_options:
          syslog-facility: local0
          tag: "{{ docker_postgres__name }}"

# ----------------------------------------------------------
#                REPOSITORY  VM
# ---------------------------------------------------------- 
- name: Install git
  hosts: repository
  become: true

  tasks:
    - name: Install git
      yum:
        name: git
        state: present
        update_cache: yes

# ----------------------------------------------------------
#                REPOSITORY VM
# ----------------------------------------------------------
- name: Deploy Gos, private github repository
  hosts: repository
  become: true

  tasks:
    - name: Deploy private repository task
      docker_container:
        name: gogs-ctn
        image: gogs/gogs
        state: started
        ports:
          - "23:22"
          - "4000:3000"
        networks:
        - name: app-network
        networks_cli_compatible: yes


# ----------------------------------------------------------
#                REGISTRY VM
# ----------------------------------------------------------
- name: Deploy registry, private docker registry
  hosts: registry
  become: true
  
  tasks:
    - name: Deploy private repository task
      docker_container:
        name: registry-ctn
        image: registry
        state: started
        ports:
          - "8000:5000"
          
- name: Deploy registry frontend
  hosts: registry
  become: true
  
  tasks:
    - name: Deploy registry fronetnd task
      docker_container:
        name: registry-frontend
        state: started
        image: konradkleine/docker-registry-frontend:v2
        links: registry-ctn:registry-ctn
        ports:
          - "80:80"
        env:
          ENV_DOCKER_REGISTRY_HOST: registry-ctn
          ENV_DOCKER_REGISTRY_PORT: "5000"
          FRONTEND_BROWSE_ONLY_MODE: "false"

# ----------------------------------------------------------
#                APPLI - Clone repository
# ----------------------------------------------------------
- name: Clone Repository
  hosts: app
  become: true
  tags:
    - run-app-
    
  tasks:
    - name: clone app
      copy:
        src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop_master/appli
        dest: /home/centos

    - name: clone daemon.json
      copy:
        src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop_master/appli/daemon.json
        dest: /etc/docker/daemon.json

    - name: restart docker
      shell: service docker restart


# ----------------------------------------------------------
#                LOCAL build images VM
# ----------------------------------------------------------
- name:  Build and push api and studentlist app
  hosts: app
  tags:
    - run-app-
  tasks:
    - name: Build an image and push it to a private repo
      docker_image:
        build:
          path: /home/centos/appli/simple_api
        name: 192.168.48.12:8000/simple-api
        tag: v1
        push: yes
        source: build
    
    - name: Pull from registry
      docker_image:
        name: php:apache
        source: pull

# ----------------------------------------------------------
#                RUN 
# ----------------------------------------------------------
- name:  Run app
  hosts: app
  tags:
    - run-app-
  tasks:
    - name: Run app task
      docker_compose:
        project_src: /home/centos/appli
        build: no
      register: output



# ----------------------------------------------------------
#                COPY Clair Docker-compose
# ----------------------------------------------------------
- name: Copy Docker-compose
  hosts: deploy
  become: true
  tags:
    - run-clair-
    
  tasks:
    - name: Copy clair docker-compose
      copy:
        src: /opt/bitnami/jenkins/jenkins_home/workspace/4dvop_master/deploy/clair-docker-compose.yaml
        dest: /home/centos/docker-compose.yaml


# ----------------------------------------------------------
#                CLAIR SCAN Build
# ----------------------------------------------------------
- name:  Clair Scan
  hosts: deploy
  tags:
    - run-clair-
  tasks:
    - name: Run clair task
      docker_compose:
        project_src: /home/centos
        build: yes
      register: output


# ----------------------------------------------------------
#                CLAIR SCAN Launch
# ----------------------------------------------------------
- name:  Clair launch
  hosts: jdac
  tags:
    - run-clair-
  tasks:
    - name: Run clair job
      shell:
        cmd: clair-scanner --clair="http://clair:6060" --ip jdac simple-api:latest